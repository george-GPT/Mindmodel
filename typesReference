src/types/:
  api.ts:  # Auto-generated, do not modify
    components:
      schemas:
        - Game
        - GameConfig
        - GameProgress
        - GameScore
        - UserProfile
        - AuthResponse
        - EmailTokenObtainPairRequest
        - TokenResponse
    operations:
      - api_games_games_record_score_create
      - api_games_progress_list
      - api_games_progress_create
      - api_users_auth_login_create
      - api_users_auth_google_create
      - api_users_auth_2fa_create

  auth.ts:  # Auth-specific types
    state:
      AuthState:
        isAuthenticated: boolean
        isMember: boolean
        isAdmin?: boolean
        user: UserProfile | null
        loading: Record<LoadingStateType, boolean>
    constants:
      TOKEN_EXPIRY:
        VERIFICATION: 86400
        EMAIL_CHANGE: 3600
        PASSWORD_RESET: 3600
        REFRESH: 604800
        ACCESS: 900
    types:
      AuthStatus: 'authenticated' | 'unauthenticated' | 'loading'
      AuthProvider: 'google'
      LoadingStateType: login | register | passwordChange | emailChange | twoFactor | etc

  game.ts:  # Game-specific types
    state:
      GameState:
        currentGame: components['schemas']['Game'] | null
        progress: components['schemas']['GameProgress'] | null
    types:
      GameEvent: start | pause | complete
      GameMetadata:
        sessionId: string
        startTime: number

  utils.ts:  # Common utility types
    responses:
      ApiResponse<T>:
        success: boolean
        data: T
        message?: string
      PaginatedResponse<T>:
        count: number
        results: T[]
        next?: string
        previous?: string

imports:
  pattern: "import type { components, operations } from './types/api'"
  usage: "type Game = components['schemas']['Game']"

  